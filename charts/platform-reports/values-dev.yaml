cloudProvider:
  type: gcp
  region: us-central1
  serviceAccountSecret:
    name: gcp-key
    key: key_json

platform:
  authUrl: https://dev.neu.ro
  configUrl: https://dev.neu.ro
  apiUrl: https://dev.neu.ro/api/v1
  accessTokenCookieName: dat
  clusterName: default
  token:
    valueFrom:
      secretKeyRef:
        name: platformservices-secret
        key: cluster_token

metricsExporter:
  nameOverride: platform-metrics-exporter
  fullnameOverride: platform-metrics-exporter

prometheusProxy:
  nameOverride: platform-prometheus-proxy
  fullnameOverride: platform-prometheus-proxy

  replicas: 2

grafanaProxy:
  nameOverride: platform-grafana-proxy
  fullnameOverride: platform-grafana-proxy

  replicas: 2
  ingress:
    enabled: true
    ingressClassName: traefik
    hosts: [metrics-dev.neu.ro]
    annotations:
      traefik.ingress.kubernetes.io/router.pathmatcher: PathPrefix
      traefik.ingress.kubernetes.io/router.middlewares: platform-platform-ingress-auth@kubernetescrd
      external-dns.platform.neuromation.io: "true"

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      thanos:
        objectStorageConfig:
          name: thanos-object-storage-config
          key: thanos-object-storage.yaml
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: gp2

  prometheusOperator:
    kubeletService:
      namespace: platform

  kubelet:
    namespace: platform

thanos:
  store:
    persistentVolumeClaim:
      spec:
        storageClassName: gp2

  compact:
    persistentVolumeClaim:
      spec:
        storageClassName: gp2

  objstoreSecretOverride: thanos

grafana:
  adminPassword: password

sentry:
  dsn: https://432bc48cd2444be7afec5efeb1fc03a6@o489136.ingest.sentry.io/5530426
  clusterName: dev
  sampleRate: 0.002
