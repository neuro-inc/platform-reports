apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platformReports.metricsExporter.fullname" . }}
  labels: {{ include "platformReports.labels.standard" . | nindent 4 }}
    service: platform-metrics-exporter
spec:
  replicas: {{ .Values.metricsExporter.replicas }}
  selector:
    matchLabels:
      app: {{ include "platformReports.name" . }}
      release: {{ .Release.Name | quote }}
      service: platform-metrics-exporter
  template:
    metadata:
      labels:
        app: {{ include "platformReports.name" . }}
        release: {{ .Release.Name | quote }}
        service: platform-metrics-exporter
      annotations:
{{- if .Values.metricsExporter.podMetadata.annotations }}
{{ toYaml .Values.metricsExporter.podMetadata.annotations | indent 8 }}
{{- end }}
{{- if .Values.secrets }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          # Schedule pods on different nodes
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - platform-metrics-exporter
              topologyKey: kubernetes.io/hostname
      {{- if .Values.image.pullSecretName }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName | quote }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: metrics-exporter
          securityContext:
            {{- with .Values.securityContext }}
            runAsUser: {{ .runAsUser }}
            runAsGroup: {{ .runAsGroup }}
            runAsNonRoot: {{ .runAsNonRoot }}
            allowPrivilegeEscalation: {{ .allowPrivilegeEscalation }}
            {{- end }}
          command: [metrics-exporter]
          env:
            {{- if .Values.logLevel }}
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
            {{- end }}
            - name: SERVER_PORT
              value: {{ .Values.metricsExporter.port | quote }}
            - name: NP_KUBE_URL
              value: https://kubernetes.default.svc
            - name: NP_KUBE_AUTH_TYPE
              value: token
            - name: NP_KUBE_CERT_AUTHORITY_PATH
              value: {{ include "platformReports.kubeAuthMountRoot" . }}/ca.crt
            - name: NP_KUBE_TOKEN_PATH
              value: {{ include "platformReports.kubeAuthMountRoot" . }}/token
            - name: NP_CONFIG_URL
              value: {{ .Values.platform.configUrl | quote }}
            - name: NP_API_URL
              value: {{ .Values.platform.apiUrl | quote }}
            - name: NP_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 14 }}
{{- end }}
            - name: NP_CLUSTER_NAME
              value: {{ .Values.platform.clusterName }}
            {{- if .Values.cloudProvider }}
            - name: NP_CLOUD_PROVIDER
              value: {{ .Values.cloudProvider.type | quote }}
            - name: NP_REGION
              value: {{ .Values.cloudProvider.region | quote }}
            {{- if eq .Values.cloudProvider.type "gcp" }}
            - name: NP_GCP_SERVICE_ACCOUNT_KEY_PATH
              value: /var/run/secrets/gcp/key.json
            {{- end }}
            {{- end }}
            {{- if .Values.sentry }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.dsn }}
            - name: SENTRY_CLUSTER_NAME
              value: {{ .Values.sentry.clusterName }}
            - name: SENTRY_APP_NAME
              value: platform-metrics-exporter
            - name: SENTRY_SAMPLE_RATE
              value: {{ .Values.sentry.sampleRate | default 0 | quote }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metricsExporter.port }}
              protocol: TCP
          {{- if .Values.metricsExporter.resources }}
          resources: {{ toYaml .Values.metricsExporter.resources | nindent 12 }}
          {{- end }}
          # Service initialization can take some time before probe handler start responding
          readinessProbe:
            httpGet:
              path: /ping
              port: metrics
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: metrics
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 10
          volumeMounts:
            - name: kube-api-data
              mountPath: {{ include "platformReports.kubeAuthMountRoot" . }}
              readOnly: true
          {{- if .Values.cloudProvider }}
          {{- if eq .Values.cloudProvider.type "gcp" }}
            - name: service-account-key
              mountPath: /var/run/secrets/gcp
              readOnly: true
          {{- end }}
          {{- end }}
      volumes:
        - name: kube-api-data
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3600
                path: token
            - configMap:
                name: kube-root-ca.crt
                items:
                - key: ca.crt
                  path: ca.crt
      {{- if .Values.cloudProvider }}
      {{- if eq .Values.cloudProvider.type "gcp" }}
        - name: service-account-key
          secret:
            secretName: {{ .Values.cloudProvider.serviceAccountSecret.name | quote }}
            items:
              - key: {{ .Values.cloudProvider.serviceAccountSecret.key | quote }}
                path: key.json
      {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
