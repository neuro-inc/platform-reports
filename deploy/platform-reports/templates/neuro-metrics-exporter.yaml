apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: neuro-metrics-exporter
  labels: {{ include "platform-reports.labels.standard" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ include "platform-reports.name" . }}
      release: {{ .Release.Name | quote }}
      component: neuro-metrics-exporter
  template:
    metadata:
      labels:
        app: {{ include "platform-reports.name" . }}
        release: {{ .Release.Name | quote }}
        component: neuro-metrics-exporter
      annotations: {{ toYaml .Values.metricsServer.podMetadata.annotations | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ .Values.nodePoolLabels.job }}
                    operator: Exists
      tolerations:
        - effect: NoSchedule
          operator: Exists
      {{- if .Values.image.pullSecretName }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName | quote }}
      {{- end }}
      containers:
        # Use slim image version to reduce service startup time
        - image: {{ .Values.image.repository }}:{{ .Values.image.slimTag }}
          name: neuro-metrics-exporter
          command: ["metrics-server"]
          env:
            - name: NP_LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: NP_METRICS_API_PORT
              value: {{ .Values.metricsServer.port | quote }}
            - name: NP_CONFIG_URL
              value: {{ .Values.platform.configUrl }}
            - name: NP_CONFIG_TOKEN
              valueFrom:
                secretKeyRef:
                  name: platformservices-secret
                  key: cluster_token
            - name: NP_CLUSTER_NAME
              value: {{ .Values.platform.clusterName }}
            - name: NP_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.cloudProvider }}
            - name: NP_CLOUD_PROVIDER
              value: {{ .Values.cloudProvider.type | quote }}
            - name: NP_REGION
              value: {{ .Values.cloudProvider.region | quote }}
            {{- if eq .Values.cloudProvider.type "gcp" }}
            - name: NP_GCP_SERVICE_ACCOUNT_KEY_PATH
              value: /root/service_account/key.json
            {{- end }}
            {{- end }}
            - name: NP_JOBS_NAMESPACE
              value: {{ .Values.platformJobs.namespace }}
            - name: NP_NODE_POOL_LABEL
              value: {{ .Values.nodePoolLabels.nodePool }}
            - name: NP_NODE_PREEMPTIBLE_LABEL
              value: {{ .Values.nodePoolLabels.preemptible }}
            - name: NP_JOB_LABEL
              value: {{ .Values.platformJobs.label }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metricsServer.port }}
          {{- if .Values.metricsServer.resources }}
          resources: {{ toYaml .Values.metricsServer.resources | nindent 12 }}
          {{- end }}
          # Service initialization can take some time before probe handler start responding
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.metricsServer.port }}
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.metricsServer.port }}
            initialDelaySeconds: 3
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 10
          {{- if .Values.cloudProvider }}
          {{- if eq .Values.cloudProvider.type "gcp" }}
          volumeMounts:
            - name: service-account-key
              mountPath: /root/service_account
              readOnly: true
          {{- end }}
          {{- end }}
      {{- if .Values.cloudProvider }}
      {{- if eq .Values.cloudProvider.type "gcp" }}
      volumes:
        - name: service-account-key
          secret:
            secretName: {{ .Values.cloudProvider.serviceAccountSecret.name | quote }}
            items:
              - key: {{ .Values.cloudProvider.serviceAccountSecret.key | quote }}
                path: key.json
      {{- end }}
      {{- end }}
---
kind: Service
apiVersion: v1
metadata:
  name: neuro-metrics-exporter
  labels: {{ include "platform-reports.labels.standard" . | nindent 4 }}
    component: neuro-metrics-exporter
spec:
  selector:
    app: {{ include "platform-reports.name" . }}
    release: {{ .Release.Name | quote }}
    component: neuro-metrics-exporter
  ports:
    - name: metrics
      port: {{ .Values.metricsServer.port }}
      targetPort: metrics
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: neuro-metrics-exporter
  labels: {{ include "platform-reports.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "platform-reports.name" . }}
      release: {{ .Release.Name | quote }}
      component: neuro-metrics-exporter
  endpoints:
    - port: metrics
      path: /metrics
      honorLabels: true
      interval: 15s
      relabelings:
        - sourceLabels:
            - __metrics_path__
          targetLabel: metrics_path
