apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-proxy
  labels: {{ include "platform-reports.labels.standard" . | nindent 4 }}
    component: prometheus-proxy
spec:
  replicas: {{ .Values.prometheusProxy.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ include "platform-reports.name" . }}
      release: {{ .Release.Name | quote }}
      component: prometheus-proxy
  template:
    metadata:
      labels:
        app: {{ include "platform-reports.name" . }}
        release: {{ .Release.Name | quote }}
        component: prometheus-proxy
    spec:
      containers:
        - name: proxy
          image: {{ .Values.prometheusProxy.image.repository }}:{{ .Values.prometheusProxy.image.tag }}
          command: ["platform-reports", "prometheus-proxy"]
          env:
            - name: NP_CLUSTER_NAME
              value: {{ .Values.platform.clusterName }}
            - name: NP_PROMETHEUS_HOST
              value: thanos-query-http
            - name: NP_PROMETHEUS_PORT
              value: "10902"
            - name: NP_AUTH_URL
              value: {{ .Values.platform.authUrl }}
            - name: NP_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: platformservices-secret
                  key: cluster_token
            - name: NP_AUTH_ACCESS_TOKEN_COOKIE_NAME
              value: {{ .Values.platform.accessTokenCookieName }}
            - name: NP_API_URL
              value: {{ .Values.platform.apiUrl }}
          {{- if .Values.prometheusProxy.resources }}
          resources: {{ toYaml .Values.prometheusProxy.resources | nindent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3