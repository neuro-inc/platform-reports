[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "platform-reports"
version = "0.0.0"
description = "Neu.ro platform reports"
readme = "README.md"
license = "Proprietary"
authors = ["Apolo.us"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]

packages = [{ include = "platform_reports", from = "src" }]
include = [
    "src/platform_reports/py.typed",
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
aiobotocore = "2.23.0"
aiohttp-apispec = "2.2.3"
aiohttp = { version = "3.12.13", extras = ["speedups"] }
cachetools = "5.5.2"
google-api-python-client = "2.176.0"
lark = "1.2.2"
marshmallow = "3.26.1"
neuro-auth-client = "25.5.1"
neuro-config-client = "25.7.0"
neuro-logging = "25.6.1"
pydantic = "2.11.7"
pydantic-settings = "2.10.1"
python-dateutil = "2.9.0.post0"
python-jose = "3.5.0"
uvloop = "0.21.0"
yarl = "1.20.1"

[tool.poetry.scripts]
metrics-api = "platform_reports.api:run_metrics_api"
metrics-exporter = "platform_reports.api:run_metrics_exporter"
prometheus-proxy = "platform_reports.api:run_prometheus_proxy"
grafana-proxy = "platform_reports.api:run_grafana_proxy"

[tool.poetry.group.dev.dependencies]
mypy = "1.16.1"
pre-commit = "4.2.0"
pytest = "8.4.1"
pytest-aiohttp = "1.1.0"
pytest-asyncio = "0.21.2"
pytest-cov = "6.2.1"
pytest-docker = "3.2.3"
ruff ="0.12.2"
types-cachetools = "6.0.0.20250525"
types-PyYAML = "6.0.12.20250516"
types-python-dateutil = "2.9.0.20250708"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E", "F", "I", "C90", "UP", "B", "ASYNC", "N", "FBT", "A", "C4", "EM", "FA", "ICN",
    "G", "PIE", "T20", "PYI", "PT", "RET", "PTH"
]
ignore = [
    "A003",  # Class attribute "..." is shadowing a Python builtin
    "N818"
]

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2
known-first-party = ["platform_reports"]
known-third-party = ["alembic"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:aiohttp",
    "ignore:invalid escape sequence:DeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["platform_reports"]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_security.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jose.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiobotocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "googleapiclient.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_apispec.*"
ignore_missing_imports = true
